
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester;
    private String currentStudentID;
    private String author;
    private String project;

    //where everything gets built
    public MainFrame() {
        initComponents();
        checkData();
        rebuildSemesterComboBoxes();
        rebuildCourseComboBox();
        rebuildStudentComboBox(); //updates combobox when stuff is added //students, courses 
        
    }

    public void rebuildSemesterComboBoxes() {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0) {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        } else {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    
    public void rebuildStudentComboBox(){
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        //SelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        //DisplayScheduleSlectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        MainStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        DropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        if(students.size()>0){
            currentStudentLabel.setText(students.get(0).toString());
            currentStudentID = students.get(0).getStudentID();
        }
        else{
            currentStudentLabel.setText("None, add a student");
        }
    }
    
    public void rebuildCourseComboBox(){
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        //ArrayList<String> courses = new ArrayList<String>();
        //courses.add("cmpsc 131");
        //SelectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(CourseQueries.getAllCourses(currentSemester).toArray()));
        SelectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        DisplayCourseListofStudentsComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        adminDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        DropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        
    }
    
    public void rebuildDisplayCourseTable(){
        DefaultTableModel displayCoursesTableModel = (DefaultTableModel)displayCoursesTabelModel.getModel();
        displayCoursesTableModel.setNumRows(0);
    }
    
    public void rebuildDisplayScheduleTableModel(){
        DefaultTableModel displayScheduleTableModel = (DefaultTableModel)displayScheduleTable.getModel();
        displayScheduleTableModel.setNumRows(0);
    }
    
    public void rebuildDisplayCourseListofStudentsTables(){
        //Scheduled Table
        DefaultTableModel ScheduledDCLoSTableModel = (DefaultTableModel)ScheduledDCLoSTable.getModel();
        ScheduledDCLoSTableModel.setNumRows(0);
        
        //Waitlisted Table
        DefaultTableModel WaitlistedDCLoSTableModel = (DefaultTableModel)WaitlistedDCLoSTable.getModel();
        WaitlistedDCLoSTableModel.setNumRows(0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        coursecodeTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        coursedecriptionTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        addCourseButton = new javax.swing.JButton();
        TestaddCourseLabel = new javax.swing.JLabel();
        CourseSeatsSpinner = new javax.swing.JSpinner();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        StudentIDTextField = new javax.swing.JTextField();
        FirstNameTextField = new javax.swing.JTextField();
        LastNameTextField = new javax.swing.JTextField();
        AddStudentButton = new javax.swing.JButton();
        AddStudentStatus = new javax.swing.JLabel();
        TESTaddStudentLabel = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        DisplayCourseListofStudentsComboBox = new javax.swing.JComboBox<>();
        DisplayCourseListofStudentsButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ScheduledDCLoSTable = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        WaitlistedDCLoSTable = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        DropStudentComboBox = new javax.swing.JComboBox<>();
        DropStudentButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        DropStudentTextArea = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        adminDropCourseComboBox = new javax.swing.JComboBox<>();
        adminDropCourseButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        adminDropCourseAreaBox = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayCoursesTabelModel = new javax.swing.JTable();
        DisplayCoursesButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        SelectCourseComboBox = new javax.swing.JComboBox<>();
        ScheduleCourseButton = new javax.swing.JButton();
        TESTscheduleCourseTextField = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayScheduleTable = new javax.swing.JTable();
        DisplayScheduleButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        DropCourseComboBox = new javax.swing.JComboBox<>();
        DropCourseButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        StudentDropCourseTextArea = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();
        currentStudentLabel = new javax.swing.JLabel();
        MainStudentComboBox = new javax.swing.JComboBox<>();
        ChangeStudentButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        jLabel3.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(addSemesterSubmitButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Semester", jPanel3);

        jLabel4.setText("Course Code:");

        coursecodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursecodeTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Course Description:");

        jLabel6.setText("Course Seats:");

        addCourseButton.setText("Submit");
        addCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(52, 52, 52)
                                .addComponent(coursecodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(coursedecriptionTextField)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(CourseSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(addCourseButton))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TestaddCourseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(626, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(coursecodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(coursedecriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(CourseSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addCourseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TestaddCourseLabel)
                .addContainerGap(327, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Course", jPanel4);

        jLabel7.setText("Student ID:");

        jLabel8.setText("First Name:");

        jLabel9.setText("Last Name:");

        AddStudentButton.setText("Submit");
        AddStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStudentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TESTaddStudentLabel)
                    .addComponent(AddStudentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddStudentButton)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(StudentIDTextField)
                                .addComponent(FirstNameTextField)
                                .addComponent(LastNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(StudentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(FirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(LastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(AddStudentButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddStudentStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TESTaddStudentLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Student", jPanel5);

        jLabel14.setText("Select Course");

        DisplayCourseListofStudentsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DisplayCourseListofStudentsButton.setText("Display");
        DisplayCourseListofStudentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayCourseListofStudentsButtonActionPerformed(evt);
            }
        });

        ScheduledDCLoSTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane3.setViewportView(ScheduledDCLoSTable);

        jLabel15.setText("Scheduled Students");

        WaitlistedDCLoSTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "Student ID"
            }
        ));
        jScrollPane4.setViewportView(WaitlistedDCLoSTable);

        jLabel16.setText("Waitlisted Students");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(DisplayCourseListofStudentsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addComponent(DisplayCourseListofStudentsButton))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)))
                .addContainerGap(464, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(DisplayCourseListofStudentsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DisplayCourseListofStudentsButton))
                .addGap(20, 20, 20)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );

        jTabbedPane2.addTab("Display Course List of Students", jPanel10);

        jLabel18.setText("Select Student");

        DropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DropStudentButton.setText("Drop Student");
        DropStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropStudentButtonActionPerformed(evt);
            }
        });

        DropStudentTextArea.setColumns(20);
        DropStudentTextArea.setRows(5);
        jScrollPane6.setViewportView(DropStudentTextArea);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(DropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DropStudentButton)))
                .addContainerGap(479, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(DropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DropStudentButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Student", jPanel11);

        jLabel17.setText("Select Course to be Dropped:");

        adminDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        adminDropCourseButton.setText("Drop Course");
        adminDropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDropCourseButtonActionPerformed(evt);
            }
        });

        adminDropCourseAreaBox.setColumns(20);
        adminDropCourseAreaBox.setRows(5);
        jScrollPane5.setViewportView(adminDropCourseAreaBox);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(adminDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(adminDropCourseButton)))
                .addContainerGap(483, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(adminDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminDropCourseButton))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(209, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Course", jPanel12);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addTab("Admin", jPanel1);

        displayCoursesTabelModel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ));
        jScrollPane1.setViewportView(displayCoursesTabelModel);

        DisplayCoursesButton.setText("Display");
        DisplayCoursesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayCoursesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(DisplayCoursesButton)))
                .addContainerGap(464, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DisplayCoursesButton)
                .addContainerGap(210, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Display Courses", jPanel6);

        jLabel10.setText("Select Course:");

        SelectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ScheduleCourseButton.setText("Submit");
        ScheduleCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TESTscheduleCourseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(26, 26, 26)
                        .addComponent(SelectCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(ScheduleCourseButton)))
                .addContainerGap(670, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(SelectCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(ScheduleCourseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TESTscheduleCourseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(275, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Schedule Course", jPanel7);

        displayScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ));
        jScrollPane2.setViewportView(displayScheduleTable);

        DisplayScheduleButton.setText("Display");
        DisplayScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayScheduleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(DisplayScheduleButton)))
                .addContainerGap(464, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DisplayScheduleButton)
                .addContainerGap(183, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Display Schedule", jPanel8);

        jLabel12.setText("Select Course:");

        DropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DropCourseButton.setText("Drop Course");
        DropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropCourseButtonActionPerformed(evt);
            }
        });

        StudentDropCourseTextArea.setColumns(20);
        StudentDropCourseTextArea.setRows(5);
        jScrollPane7.setViewportView(StudentDropCourseTextArea);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(DropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(DropCourseButton))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(438, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(DropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DropCourseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Drop Course", jPanel9);

        jLabel19.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel19.setText("Current Student:");

        currentStudentLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N

        MainStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ChangeStudentButton.setText("Change Student");
        ChangeStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeStudentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel19)
                .addGap(18, 18, 18)
                .addComponent(currentStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MainStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ChangeStudentButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(MainStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChangeStudentButton)
                    .addComponent(currentStudentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Student", jPanel2);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changeSemesterButton)
                                .addGap(31, 31, 31)
                                .addComponent(aboutButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(aboutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        //takes stuff out of gui
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        rebuildSemesterComboBoxes();
        addSemesterTextfield.setText("");
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        // display about information.
        JOptionPane.showMessageDialog(null, "Author: " + author + " Project: " + project);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void coursecodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursecodeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coursecodeTextFieldActionPerformed

    private void addCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseButtonActionPerformed
        try {
            // TODO add your handling code here:
            
            String CourseCode = coursecodeTextField.getText();
            String Description = coursedecriptionTextField.getText();
            //int Seats = Integer.parseInt(seatsTextField.getText());
            int Seats = (Integer) CourseSeatsSpinner.getValue();
            
            
            CourseEntry newcourse = new CourseEntry(currentSemester, CourseCode, Description, Seats);
            CourseQueries.addCourse(newcourse);
            TestaddCourseLabel.setText(CourseCode + " has been added");
            rebuildCourseComboBox();
            coursecodeTextField.setText("");
            coursedecriptionTextField.setText("");
            CourseSeatsSpinner.setValue(0);
            
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_addCourseButtonActionPerformed

    private void DisplayCoursesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayCoursesButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        DefaultTableModel displayCoursesTableModel = (DefaultTableModel)displayCoursesTabelModel.getModel();
        
        displayCoursesTableModel.setNumRows(0);
        Object[] rowData = new Object[3];
        
        for (CourseEntry course:courses){
            rowData[0] = course.getCourseCode();
            rowData[1] = course.getDescription();
            rowData[2] = course.getSeats();
            displayCoursesTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_DisplayCoursesButtonActionPerformed

    private void ScheduleCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleCourseButtonActionPerformed
        // TODO add your handling code here:
        //TESTscheduleCourseTextField.setText();
        CourseEntry course = (CourseEntry) SelectCourseComboBox.getSelectedItem(); 
        //StudentEntry student = (StudentEntry) SelectStudentComboBox.getSelectedItem();
        //StudentEntry student = (StudentEntry) MainStudentComboBox.getSelectedItem();
        //StudentEntry student = currentStudent;
        StudentEntry student = StudentQueries.getStudent(currentStudentID);
        //System.out.println(currentStudentID);
        
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        int courseSeats = CourseQueries.getCourseSeats(currentSemester, course.CourseCode);
        int ScheduledSeats = ScheduleQueries.getScheduledStudentCount(currentSemester, course.CourseCode);
        int availableSeats = courseSeats - ScheduledSeats;
        
        if (availableSeats > 0 ){
            ScheduleEntry scheduledStudent = new ScheduleEntry(currentSemester, course.CourseCode, student.StudentID, "S", currentTimestamp);
            ScheduleQueries.addScheduleEntry(scheduledStudent);
            TESTscheduleCourseTextField.setText(course.CourseCode + " has been scheduled");
        }
        else{
            ScheduleEntry waitlistedStudent = new ScheduleEntry(currentSemester, course.CourseCode, student.StudentID, "W", currentTimestamp);
            ScheduleQueries.addScheduleEntry(waitlistedStudent);
            TESTscheduleCourseTextField.setText(course.CourseCode + " has been waitlisted");
        }
        
        
    }//GEN-LAST:event_ScheduleCourseButtonActionPerformed

    private void DisplayScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayScheduleButtonActionPerformed
        // TODO add your handling code here:
        
        //StudentEntry currentstudent = (StudentEntry) MainStudentComboBox.getSelectedItem();
        //StudentEntry currentstudent = (StudentEntry) currentStudent;
        StudentEntry currentstudent = StudentQueries.getStudent(currentStudentID);
        //System.out.println(currentStudentID);
        
        ArrayList<ScheduleEntry> currentstudentschedule = ScheduleQueries.getSchedulebyStudent(currentSemester, currentstudent.StudentID);
        
        DefaultTableModel displayScheduleTableModel = (DefaultTableModel)displayScheduleTable.getModel();
        
        displayScheduleTableModel.setNumRows(0);
        Object[] rowData = new Object[2];
        
        for (ScheduleEntry schedule: currentstudentschedule){
            rowData[0] = schedule.getCourseCode();
            rowData[1] = schedule.getStatus();
            displayScheduleTableModel.addRow(rowData);
        }  
    }//GEN-LAST:event_DisplayScheduleButtonActionPerformed

    private void AddStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStudentButtonActionPerformed
        // TODO add your handling code here:
        String StudentID = StudentIDTextField.getText();
        String FirstName = FirstNameTextField.getText();
        String LastName = LastNameTextField.getText();
        
        
        StudentEntry newstudent = new StudentEntry(StudentID, FirstName, LastName);
        StudentQueries.addStudent(newstudent);
        TESTaddStudentLabel.setText(LastName + ", " + FirstName + " has been added.");
        
        rebuildStudentComboBox();
        StudentIDTextField.setText("");
        FirstNameTextField.setText("");
        LastNameTextField.setText("");
        //add Student to combobox

    }//GEN-LAST:event_AddStudentButtonActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        currentSemester = currentSemesterComboBox.getSelectedItem().toString();
        currentSemesterLabel.setText(currentSemester);
        //clear textboxes
        TESTaddStudentLabel.setText("");
        TESTscheduleCourseTextField.setText("");
        TestaddCourseLabel.setText("");
        addSemesterStatusLabel.setText("");
        StudentDropCourseTextArea.setText("");
        DropStudentTextArea.setText("");
        adminDropCourseAreaBox.setText("");
        
        //rebuild Combo Boxes and Tables
        rebuildStudentComboBox();
        rebuildCourseComboBox();
        rebuildDisplayCourseTable();
        rebuildDisplayScheduleTableModel();
        rebuildDisplayCourseListofStudentsTables();
        
        
        
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void DropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropCourseButtonActionPerformed
        // TODO add your handling code here:
        //text area is StudentDropCourseTextArea
        CourseEntry studentsdroppedcourse = (CourseEntry)DropCourseComboBox.getSelectedItem();
        //CourseQueries.dropCourse(currentSemester, studentsdroppedcourse.getCourseCode());
        //StudentEntry student = (StudentEntry)MainStudentComboBox.getSelectedItem();
        //StudentEntry student = (StudentEntry) currentStudent;
        StudentEntry student = StudentQueries.getStudent(currentStudentID);
        //System.out.println(currentStudentID);
        //students current schedule
        ArrayList<ScheduleEntry> studentSchedule = ScheduleQueries.getSchedulebyStudent(currentSemester, student.getStudentID());
        
        //drops student from course
        ScheduleQueries.dropStudentScheduleByCourse(currentSemester, student.getStudentID(), studentsdroppedcourse.getCourseCode());
        StudentDropCourseTextArea.append(student.toString() +  " has been dropped from " + studentsdroppedcourse.getCourseCode());
        //if student is scheduled for the course and there is a waitlist drop the student and schedule next person in waitlist
        
        //looks for dropped course in the students schedule
        for(ScheduleEntry course: studentSchedule){
            if (course.getCourseCode().equals(studentsdroppedcourse.getCourseCode()));
                //checks if course is scheduled
                if(course.getStatus().equals("S")){
                    //gets the waitlisted students for course
                    ArrayList<ScheduleEntry> waitlistedstudents = ScheduleQueries.getWaitlistedStudentsbyCourse(currentSemester, studentsdroppedcourse.getCourseCode());
                //if there is are student/s on the waitlist
                if(!waitlistedstudents.isEmpty()){
                    //the first student on the waitlist
                    ScheduleEntry firstwaitliststudent = waitlistedstudents.get(0);
                    //updates first student on the waitlist Schedule and Schedules the Course
                    ScheduleQueries.updateScheduleEntry(currentSemester, firstwaitliststudent);
                    //StudentDropCourseTextArea.append("\n" + StudentQueries.getStudent(firstwaitliststudent.getStudentID()).toString() + " had been scheduled into " + studentsdroppedcourse.getCourseCode());
                    StudentDropCourseTextArea.append("\n" + StudentQueries.getStudent(firstwaitliststudent.getStudentID()).getLastName() + ", " + StudentQueries.getStudent(firstwaitliststudent.getStudentID()).getFirstName() + " has been scheduled into " + studentsdroppedcourse.getCourseCode());
                }   
            } 
        }
        //rebuild Combo Boxes and Tables
        rebuildCourseComboBox();
        rebuildDisplayCourseListofStudentsTables();
        rebuildDisplayScheduleTableModel();
    }//GEN-LAST:event_DropCourseButtonActionPerformed

    private void DisplayCourseListofStudentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayCourseListofStudentsButtonActionPerformed
        // TODO add your handling code here
        
        CourseEntry currentCourse = (CourseEntry) DisplayCourseListofStudentsComboBox.getSelectedItem();
        String courseCode = currentCourse.getCourseCode();
        
        //gets the list of schedules that have students scheduled for the course
        ArrayList<ScheduleEntry> scheduledstudentsschedules = ScheduleQueries.getScheduledStudentsByCourse(currentSemester, courseCode);
        //System.out.println(scheduledstudentsschedules.size());
        //System.out.println(scheduledstudentsschedules.indexOf(0));
        //System.out.println(scheduledstudentsschedules.indexOf(1));
        //gets the list of schedules that have students waitlisted for the course
        ArrayList<ScheduleEntry> waitlistedstudentsschedules = ScheduleQueries.getWaitlistedStudentsbyCourse(currentSemester, courseCode);
        
        //Scheduled
        DefaultTableModel ScheduledDCLoSTableModel = (DefaultTableModel)ScheduledDCLoSTable.getModel();
        ScheduledDCLoSTableModel.setNumRows(0);
        Object[] scheduledRowData = new Object[3];
        //every schedule that has the course scheduled
        for(ScheduleEntry schedule: scheduledstudentsschedules){
            //Creates a student for every student scheduled in the course
            StudentEntry scheduledstudent = StudentQueries.getStudent(schedule.getStudentID());
            //adds data to table
            //System.out.println(scheduledstudent);
            
            scheduledRowData[0] = scheduledstudent.getLastName();
            scheduledRowData[1] = scheduledstudent.getFirstName();
            scheduledRowData[2] = scheduledstudent.getStudentID();
            ScheduledDCLoSTableModel.addRow(scheduledRowData);
            
        }
        //Waitlisted
        DefaultTableModel WaitlistedDCLoSTableModel = (DefaultTableModel)WaitlistedDCLoSTable.getModel();
        WaitlistedDCLoSTableModel.setNumRows(0);
        Object[] waitlistedRowData = new Object[3];
        //every schedule that has the course waitlisted
        for(ScheduleEntry schedule: waitlistedstudentsschedules){
            //creates a student for every student that has the course waitlisted
            StudentEntry waitlistedStudent = StudentQueries.getStudent(schedule.getStudentID());
            //adds data to table
            if(waitlistedStudent != null){
                waitlistedRowData[0] = waitlistedStudent.getLastName();
                waitlistedRowData[1] = waitlistedStudent.getFirstName();
                waitlistedRowData[2] = waitlistedStudent.getStudentID();
                WaitlistedDCLoSTableModel.addRow(waitlistedRowData);
            }
        }  
    }//GEN-LAST:event_DisplayCourseListofStudentsButtonActionPerformed

    private void DropStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropStudentButtonActionPerformed
        // TODO add your handling code here:
        StudentEntry student = (StudentEntry)DropStudentComboBox.getSelectedItem();
        //StudentEntry student = (StudentEntry) currentStudent;
        //System.out.println(student.getStudentID());
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        //remove student from database
        StudentQueries.dropStudent(student.getStudentID());
        DropStudentTextArea.append(student.toString() + " has been dropped from the list of students.\n");
        //for every semester the student is enrolled in
        for(String semester: semesters){
            DropStudentTextArea.append("\nFor Semester: " + semester);
            ArrayList<ScheduleEntry> semesterSchedule = ScheduleQueries.getSchedulebyStudent(semester, student.getStudentID());
            //if the course is scheduled unenrolled and get the first person on waitlist in the class. 
            for(ScheduleEntry course: semesterSchedule){
                if(course.getStatus().equals("S")){
                    ScheduleQueries.dropStudentScheduleByCourse(semester, student.getStudentID(), course.getCourseCode());
                    
                    DropStudentTextArea.append("\n"+student.toString() + " has been dropped from "+course.getCourseCode());
                    //waitlisted students list
                    ArrayList<ScheduleEntry> waitlistedstudents = ScheduleQueries.getWaitlistedStudentsbyCourse(semester, course.getCourseCode());
                    if(!waitlistedstudents.isEmpty()){
                        ScheduleEntry firstwaitlistedstudentschedule = waitlistedstudents.get(0);
                        StudentEntry firstwaitlistedStudent = StudentQueries.getStudent(firstwaitlistedstudentschedule.getStudentID());
                        //add waitlisted student to course 
                        ScheduleQueries.updateScheduleEntry(semester, firstwaitlistedstudentschedule);
                        DropStudentTextArea.append("\n"+ firstwaitlistedStudent.toString() + " has been scheduled into " + course.getCourseCode());  
                    }
                }
                //student is waitlisted from the course
                if(course.getStatus().equals("W")){
                    //student is dropped from the waitlist 
                    ScheduleQueries.dropStudentScheduleByCourse(semester, student.getStudentID(), course.getCourseCode());
                    DropStudentTextArea.append("\n" + student.toString() + " has been dropped from the waitlist for " + course.getCourseCode());
                    
                }
            }
            DropStudentTextArea.append("\n");
        }
        rebuildStudentComboBox();
        rebuildDisplayCourseListofStudentsTables();
        rebuildDisplayScheduleTableModel();
        
    }//GEN-LAST:event_DropStudentButtonActionPerformed

    private void adminDropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDropCourseButtonActionPerformed
        // TODO add your handling code here:
        CourseEntry droppedcourse = (CourseEntry)adminDropCourseComboBox.getSelectedItem();
        //get all students that are scheduled in the course, get all students that are waitlisted in the course, dropschedulebycourse
        CourseQueries.dropCourse(currentSemester, droppedcourse.getCourseCode());
        ArrayList<ScheduleEntry> ScheduledStudents =ScheduleQueries.getScheduledStudentsByCourse(currentSemester, droppedcourse.getCourseCode());
        ArrayList<ScheduleEntry> WaitlistedStudents = ScheduleQueries.getWaitlistedStudentsbyCourse(currentSemester, droppedcourse.getCourseCode());
        adminDropCourseAreaBox.append("Scheduled students dropped from the course: ");
        for(ScheduleEntry scheduledstudent: ScheduledStudents){
            ScheduleQueries.dropSchedulebyCourse(currentSemester, droppedcourse.getCourseCode());
            ScheduleQueries.updateScheduleEntry(currentSemester, scheduledstudent);
            StudentEntry currentStudent = StudentQueries.getStudent(scheduledstudent.getStudentID());
            adminDropCourseAreaBox.append("\n" + currentStudent.toString());
        }
        adminDropCourseAreaBox.append("\n\nScheduled students dropped from the course: ");
        for(ScheduleEntry waitlistedstudent: WaitlistedStudents){
            ScheduleQueries.dropSchedulebyCourse(currentSemester, droppedcourse.getCourseCode());
            ScheduleQueries.updateScheduleEntry(currentSemester, waitlistedstudent);
            StudentEntry currentStudent = StudentQueries.getStudent(waitlistedstudent.getStudentID());
            adminDropCourseAreaBox.append(currentStudent.toString());
        }
        //rebuild Combo Boxes and Tables
        rebuildCourseComboBox();
        rebuildDisplayCourseListofStudentsTables();
        rebuildDisplayScheduleTableModel();
        rebuildDisplayCourseTable();
    }//GEN-LAST:event_adminDropCourseButtonActionPerformed

    private void ChangeStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeStudentButtonActionPerformed
        // TODO add your handling code here:
        StudentEntry currentStudent = (StudentEntry)MainStudentComboBox.getSelectedItem();
        currentStudentID = currentStudent.getStudentID();
        //System.out.println(currentStudentID);
        currentStudentLabel.setText(currentStudent.toString());
        
        TESTscheduleCourseTextField.setText("");
        StudentDropCourseTextArea.setText("");
        
        rebuildCourseComboBox();
        rebuildDisplayScheduleTableModel();
    }//GEN-LAST:event_ChangeStudentButtonActionPerformed

    private void checkData() {
        try {
            FileReader reader = new FileReader("xzq789yy.txt");
            BufferedReader breader = new BufferedReader(reader);

            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();
            byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
            author = new String(decodedAuthor);
            byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
            project = new String(decodedProject);
            reader.close();

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Spring 2023";

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                BufferedWriter bufferedWriter = new BufferedWriter(writer);

                // encode the output data.
                String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                bufferedWriter.write(encodedAuthor);
                bufferedWriter.newLine();

                String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
                bufferedWriter.write(encodedProject);

                bufferedWriter.close();
            } catch (IOException ioe) {
                ioe.printStackTrace();
                System.exit(1);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddStudentButton;
    private javax.swing.JLabel AddStudentStatus;
    private javax.swing.JButton ChangeStudentButton;
    private javax.swing.JSpinner CourseSeatsSpinner;
    private javax.swing.JButton DisplayCourseListofStudentsButton;
    private javax.swing.JComboBox<String> DisplayCourseListofStudentsComboBox;
    private javax.swing.JButton DisplayCoursesButton;
    private javax.swing.JButton DisplayScheduleButton;
    private javax.swing.JButton DropCourseButton;
    private javax.swing.JComboBox<String> DropCourseComboBox;
    private javax.swing.JButton DropStudentButton;
    private javax.swing.JComboBox<String> DropStudentComboBox;
    private javax.swing.JTextArea DropStudentTextArea;
    private javax.swing.JTextField FirstNameTextField;
    private javax.swing.JTextField LastNameTextField;
    private javax.swing.JComboBox<String> MainStudentComboBox;
    private javax.swing.JButton ScheduleCourseButton;
    private javax.swing.JTable ScheduledDCLoSTable;
    private javax.swing.JComboBox<String> SelectCourseComboBox;
    private javax.swing.JTextArea StudentDropCourseTextArea;
    private javax.swing.JTextField StudentIDTextField;
    private javax.swing.JLabel TESTaddStudentLabel;
    private javax.swing.JLabel TESTscheduleCourseTextField;
    private javax.swing.JLabel TestaddCourseLabel;
    private javax.swing.JTable WaitlistedDCLoSTable;
    private javax.swing.JButton aboutButton;
    private javax.swing.JButton addCourseButton;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JTextArea adminDropCourseAreaBox;
    private javax.swing.JButton adminDropCourseButton;
    private javax.swing.JComboBox<String> adminDropCourseComboBox;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JTextField coursecodeTextField;
    private javax.swing.JTextField coursedecriptionTextField;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JLabel currentStudentLabel;
    private javax.swing.JTable displayCoursesTabelModel;
    private javax.swing.JTable displayScheduleTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    // End of variables declaration//GEN-END:variables
}
